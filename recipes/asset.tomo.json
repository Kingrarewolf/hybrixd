{
  "symbol":"tomo",
  "name":"Tomochain",
  "info":"<p>Tomochain is a scalable blockchain-powered via Proof-of-Stake Voting consensus which is used commercially by companies globally. Its mission is to accelerate the onboarding of millions of users by empowering today’s applications with technology that masks the friction of Blockchain, all while retaining its underlying benefits. TomoChain’s technology and DeFi-focused flagship products include: Fast & Near-Zero Fees: 2000 TPS, 2-second blocktime, ~$0 gas fees, and EVM compatible. An array of original features and protocols is designed to support speed, privacy, usability, and liquidity needs all in one platform.</p>",
  "APIkey":"",
  "module":"ethereum",
  "import":"eth-api",
  "mode":"ethereum.main",
  "keygen-base":"eth",
  "fee-symbol":"tomo",
  "throttle":6,
  "historyThrottle":3,
  "histPage":25,
  "host": {
    "default": "https://rpc.tomochain.com",
    "history": "https://scan.tomochain.com/api"
  },
  "fee":"0.00002",
  "feeContractTx":"0.0001",
  "gasPriceDefault":"0.000000025",
  "gasBaseUsage":56000,
  "gasErc20Usage":112000,
  "cron":60,
  "features": {"message":true},
  "quartz":{
    "sample" : [
      "done {address:'0xa7551ba0d52c763fb6f8866de63827aa593f20bc',transaction:'0x194630a7ba8cc8905751ca5ae1c5c4695c2dc414d6978ef02a6743ee9c6176a4'}"
    ],

    "balance/address" : [
      "time 45000",
      "@retryLoop",
      "data $symbol",
      "find '.' @token 1",
      "rand 10000",
      "data {jsonrpc: '2.0', method: 'eth_getBalance', params: ['$address','latest'], id: $}",
      "curl POST {api-key:$APIkey,'Content-Type':'application/json'} 1 @failHost",
      "tran .result 1 @failure",
      "regx '^0x' 1 @failure",
      "code 'hex' 'dec'",
      "jump @returnValue",
      "@token",
      "curl ${host.history} /tokens/$contract/holder/$address GET {'Content-Type': 'application/json'} 1 @failHost",
      "tran .quantity 2 1",
      "fail 'Could not interpret Tomoscan host response!'",
      "@returnValue",
      "atom",
      "form",
      "done",
      "@failure",
      "fail 'Could not parse balance response!'",
      "@failHost",
      "fail 'Could not connect to host'"
    ],

    "getHistory/address/count=12/offset=0" : [
      "peek symbol",
      "flow tomo 1 @token",
      "poke token false",
      "poke txType all",
      "jump @start",
      "@token",
      "take 0 5",
      "flow tomo. 1 @fail",
      "poke token true",
      "poke txType trc20",
      "jump @start",
      "@fail",
      "fail 'Cannot retrieve history for Tomo asset or token.'",
      "@start",
      "time $timeout",
      "with pageOffset math floor($offset/$histPage)",
      "# Tomoscan needs pages+1, this is different from ETH!",
      "with pages math floor($count/$histPage)+1",
      "# Tomoscan needs page+1, this is different from ETH! (we do this @nextPage)",
      "with page math $pageOffset",
      "poke resultArray []",
      "@nextPage",
      "with page math +1",
      "curl ${host.history} /txs/listByAccount/$address?page=$page&limit=$histPage&tx_type=$txType GET {'Content-Type': 'application/json'} 1 @failHost",
      "tran '.items' 2 1",
      "fail 'Tomoscan node returning unexpected result!'",
      "poke tempResultArray",
      "size",
      "# Stop if no more results",
      "true ==0 @finalize 1",
      "test token 1 2",
      "with tempResultArray filt .to_model.contractCreation $originator",
      "peek resultArray",
      "fuse $tempResultArray",
      "poke resultArray",
      "size",
      "# Because we filter out some stuff we may need to continue longer, this checks if we're done",
      "true '>=$-($pageOffset+1)*$histPage' @finalize @nextPage",
      "@finalize",
      "peek resultArray",
      "sort desc .timestamp",
      "tran '[].hash' 2 1",
      "fail 'Cannot interpret history data!'",
      "with offset math '$offset - ($histPage*$pageOffset)'",
      "take $offset $count",
      "done",
      "@failHost",
      "fail 'Could not connect to host'"
    ],
    "test" : [
      "done {hash:dynamic}"
    ]
  }
}
